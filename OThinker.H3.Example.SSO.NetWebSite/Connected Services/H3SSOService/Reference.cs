//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace OThinker.H3.Example.SSO.NetWebSite.H3SSOService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="H3SSOService.SSOServiceSoap")]
    public interface SSOServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        bool ValidateUser(string SystemCode, string Secret, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string SystemCode, string Secret, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuthenticationUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        string GetAuthenticationUser(string SystemCode, string Secret, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuthenticationUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAuthenticationUserAsync(string SystemCode, string Secret, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSecret", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        bool UpdateSecret(string SystemCode, string Secret, string NewSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateSecret", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateSecretAsync(string SystemCode, string Secret, string NewSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SSOSystem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        string SSOSystemUrl(string SystemCode, string Secret, string UserCode, string TargetSystemCode, string TargetUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SSOSystem", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SSOSystemUrlAsync(string SystemCode, string Secret, string UserCode, string TargetSystemCode, string TargetUrl);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SSOServiceSoapChannel : OThinker.H3.Example.SSO.NetWebSite.H3SSOService.SSOServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SSOServiceSoapClient : System.ServiceModel.ClientBase<OThinker.H3.Example.SSO.NetWebSite.H3SSOService.SSOServiceSoap>, OThinker.H3.Example.SSO.NetWebSite.H3SSOService.SSOServiceSoap {
        
        public SSOServiceSoapClient() {
        }
        
        public SSOServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SSOServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSOServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSOServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ValidateUser(string SystemCode, string Secret, string UserName, string Password) {
            return base.Channel.ValidateUser(SystemCode, Secret, UserName, Password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string SystemCode, string Secret, string UserName, string Password) {
            return base.Channel.ValidateUserAsync(SystemCode, Secret, UserName, Password);
        }
        
        public string GetAuthenticationUser(string SystemCode, string Secret, string Token) {
            return base.Channel.GetAuthenticationUser(SystemCode, Secret, Token);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthenticationUserAsync(string SystemCode, string Secret, string Token) {
            return base.Channel.GetAuthenticationUserAsync(SystemCode, Secret, Token);
        }
        
        public bool UpdateSecret(string SystemCode, string Secret, string NewSecret) {
            return base.Channel.UpdateSecret(SystemCode, Secret, NewSecret);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSecretAsync(string SystemCode, string Secret, string NewSecret) {
            return base.Channel.UpdateSecretAsync(SystemCode, Secret, NewSecret);
        }
        
        public string SSOSystemUrl(string SystemCode, string Secret, string UserCode, string TargetSystemCode, string TargetUrl) {
            return base.Channel.SSOSystemUrl(SystemCode, Secret, UserCode, TargetSystemCode, TargetUrl);
        }
        
        public System.Threading.Tasks.Task<string> SSOSystemUrlAsync(string SystemCode, string Secret, string UserCode, string TargetSystemCode, string TargetUrl) {
            return base.Channel.SSOSystemUrlAsync(SystemCode, Secret, UserCode, TargetSystemCode, TargetUrl);
        }
    }
}
